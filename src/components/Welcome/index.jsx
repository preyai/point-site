import { Splide, SplideSlide, SplideTrack } from "@splidejs/react-splide"
import '@splidejs/react-splide/css/core'
import { useEffect, useState } from "react"
import { DateRangePicker } from "react-date-range"
import { differenceInCalendarDays, format, startOfDay } from 'date-fns'
import { ru } from 'date-fns/locale'
import 'react-date-range/dist/styles.css'
import 'react-date-range/dist/theme/default.css'
import Banner from "../Banner"
import { useRef } from "react"
import Map from "./Map"
import num_word from "../../utils/numWord"

const regions = [
    {
        id: 1,
        title: 'Калужская область',
        count: 1
    },
    // {
    //     id: 2,
    //     title: 'Другая область',
    //     count: 4
    // }
]



const Welcome = ({ refs, open, setOpen }) => {
    const media = window.matchMedia('(max-width: 700px)')
    const [region, setRegion] = useState()
    const [adults, setAdults] = useState(0)
    const [children, setСhildren] = useState(0)
    const [startDate, setStartDate] = useState(new Date())
    const [endDate, setEndDate] = useState(new Date())
    const [ref, setRef] = useState()

    const changeDate = (ranges) => {
        console.log(ranges)
        setStartDate(ranges.main.startDate)
        setEndDate(ranges.main.endDate)
    }

    const showHandler = () => {
        if (region && adults > 0 && endDate !== startDate) {
            setOpen(true)
        }
        else
            alert('Укажите параметры')
    }

    const refHandler = (element) => {
        refs.current.push(element)
        setRef(element)
    }

    return (
        <>
            <section ref={refHandler} id="welcome">
                <div className="container">
                    <h2>welcome {media && media.matches && <br />} to the <span>point<span className="red">.</span></span></h2>
                    <div className="booking-form">
                        <div className="booking-select">
                            <img src="/assets/images/pf1.png" alt="" className="booking-select_icon" />
                            <div>
                                <div className="booking-select_title">Регион</div>
                                <div className="booking-select_description">{region ? region.title : 'Выберите регион'}</div>
                            </div>
                            <button className="booking-select_btn" data-bs-toggle="modal" data-bs-target="#Modal1" />
                        </div>
                        <div className="booking-select">
                            <img src="/assets/images/pf2.png" alt="" className="booking-select_icon" />
                            <div>
                                <div className="booking-select_title">Дата</div>
                                <div className="booking-select_description">{region ? `${format(startDate, 'dd/MM')} - ${format(endDate, 'dd/MM')}` : 'Заезд и выезд'}</div>
                            </div>
                            <button className="booking-select_btn" data-bs-toggle="modal" data-bs-target="#Modal2" />
                        </div>
                        <div className="booking-select">
                            <img src="/assets/images/pf3.png" alt="" className="booking-select_icon" />
                            <div>
                                <div className="booking-select_title">Гости</div>
                                <div className="booking-select_description">{region ? adults + children : 'Количество'} людей</div>
                            </div>
                            <button className="booking-select_btn" data-bs-toggle="modal" data-bs-target="#Modal3" />
                        </div>
                        <button className="booking-form_search" onClick={showHandler}>
                            <img src="/assets/images/search.svg" width={20} alt="" />
                        </button>
                    </div>
                    {open &&
                        <SearchResult region={region} />
                    }
                </div>
                {/* modals */}
                <div>
                    <SelectRegion set={setRegion} />
                    <div className="modal fade" id="Modal2" tabIndex={-1} aria-labelledby="Modal2Label" aria-hidden="true">
                        <div className="modal-dialog modal-lg">
                            <div className="modal-content">
                                <div className="modal-header">
                                    <h5 className="modal-title" id="Modal2Label">Выбор даты:</h5>
                                    <button type="button" className="btn-close" data-bs-dismiss="modal" aria-label="Close" />
                                </div>
                                <div className="modal-body">
                                    <div className="row">
                                        <div className="col-12 col-md-6">
                                            <DateRangePicker
                                                ranges={[{ startDate, endDate, key: 'main' }]}
                                                onChange={changeDate}
                                                locale={ru}
                                                minDate={startOfDay(new Date())}
                                                showDateDisplay={false}
                                                staticRanges={[]}
                                                inputRanges={[]}
                                                // rangeColors={['transparent', 'transparent', 'transparent']}
                                                color='#f13333'
                                            // scroll={{enabled:true}}
                                            // style={{width:'calc(3em * 7'}}
                                            />
                                        </div>
                                        <div className="col-12 col-md-6">
                                            <div className="modal-date">
                                                <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="34px" height="34px">
                                                    <path fillRule="evenodd" fill="rgb(30, 28, 25)" d="M33.996,31.225 C33.996,32.748 32.748,33.997 31.226,33.997 C21.742,34.0 12.258,33.999 2.773,33.997 C1.230,33.997 0.1,32.746 0.1,31.186 C0.2,22.931 0.2,14.677 0.1,6.423 C0.1,4.862 1.185,3.627 2.748,3.566 C3.111,3.552 3.474,3.563 3.872,3.563 C3.908,2.986 3.880,2.449 3.986,1.941 C4.259,0.639 5.376,0.125 6.704,0.16 C7.884,0.143 8.804,1.213 8.814,2.473 C8.816,2.819 8.814,3.164 8.814,3.560 C9.195,3.560 9.538,3.560 9.882,3.560 C10.230,3.560 10.578,3.560 10.999,3.560 C10.999,3.205 10.998,2.864 11.0,2.523 C11.8,1.74 12.58,0.8 13.472,0.11 C14.852,0.13 15.895,1.89 15.904,2.518 C15.906,2.848 15.904,3.178 15.904,3.534 C16.633,3.534 17.324,3.534 18.90,3.534 C18.90,3.206 18.89,2.865 18.91,2.525 C18.99,1.75 19.147,0.8 20.561,0.11 C21.941,0.13 22.986,1.89 22.995,2.517 C22.997,2.847 22.995,3.177 22.995,3.533 C23.723,3.533 24.414,3.533 25.181,3.533 C25.181,3.206 25.179,2.866 25.181,2.526 C25.187,1.93 26.226,0.14 27.603,0.11 C29.19,0.7 30.74,1.70 30.85,2.516 C30.87,2.846 30.85,3.176 30.85,3.516 C30.658,3.558 31.203,3.554 31.731,3.648 C33.62,3.885 33.996,5.28 33.996,6.372 C33.998,14.657 33.998,22.941 33.996,31.225 ZM1.270,11.657 C1.270,18.61 1.270,24.465 1.271,30.870 C1.271,32.127 1.875,32.726 3.143,32.726 C12.381,32.727 21.620,32.727 30.859,32.726 C32.121,32.726 32.724,32.124 32.724,30.862 C32.725,24.473 32.724,18.84 32.724,11.694 C32.724,11.532 32.724,11.369 32.724,11.182 C22.233,11.182 11.788,11.182 1.270,11.182 C1.270,11.360 1.270,11.509 1.270,11.657 ZM7.346,1.874 C7.126,1.459 6.623,1.227 6.199,1.309 C5.681,1.410 5.290,1.759 5.258,2.271 C5.215,2.949 5.248,3.631 5.247,4.311 C5.247,4.598 5.246,4.886 5.248,5.174 C5.249,5.477 5.253,5.779 5.258,6.82 C5.265,6.521 5.488,6.823 5.871,7.12 C6.571,7.358 7.416,6.931 7.453,6.154 C7.513,4.915 7.506,3.673 7.508,2.432 C7.508,2.245 7.436,2.43 7.346,1.874 ZM14.599,2.502 C14.567,1.781 14.71,1.283 13.444,1.289 C12.813,1.295 12.314,1.794 12.306,2.517 C12.294,3.712 12.315,4.909 12.353,6.103 C12.373,6.727 12.829,7.111 13.460,7.109 C14.87,7.107 14.524,6.720 14.552,6.88 C14.580,5.498 14.558,4.907 14.558,4.317 C14.574,4.317 14.589,4.317 14.605,4.317 C14.605,3.712 14.627,3.106 14.599,2.502 ZM21.693,2.535 C21.665,1.791 21.162,1.273 20.523,1.289 C19.889,1.305 19.403,1.802 19.396,2.530 C19.384,3.709 19.405,4.890 19.440,6.70 C19.459,6.708 19.898,7.102 20.517,7.109 C21.172,7.116 21.615,6.730 21.645,6.75 C21.672,5.486 21.650,4.895 21.650,4.305 C21.666,4.305 21.682,4.305 21.697,4.305 C21.697,3.714 21.715,3.124 21.693,2.535 ZM28.770,2.469 C28.736,1.773 28.249,1.294 27.634,1.290 C27.24,1.285 26.497,1.769 26.487,2.459 C26.467,3.684 26.487,4.911 26.537,6.135 C26.562,6.777 27.43,7.133 27.715,7.107 C28.299,7.85 28.714,6.673 28.734,6.55 C28.754,5.480 28.739,4.904 28.739,4.329 C28.751,4.329 28.764,4.329 28.777,4.329 C28.777,3.709 28.801,3.87 28.770,2.469 ZM32.715,6.399 C32.698,5.655 32.186,5.15 31.530,4.930 C31.73,4.871 30.602,4.918 30.88,4.918 C30.88,5.302 30.90,5.677 30.88,6.52 C30.78,7.385 28.962,8.467 27.605,8.462 C26.277,8.457 25.184,7.369 25.179,6.45 C25.178,5.671 25.179,5.297 25.179,4.903 C24.435,4.903 23.745,4.903 22.997,4.903 C22.997,5.302 22.998,5.648 22.997,5.994 C22.994,7.247 22.71,8.303 20.847,8.456 C19.642,8.607 18.477,7.842 18.189,6.631 C18.59,6.85 18.87,5.501 18.41,4.914 C17.343,4.914 16.643,4.914 15.907,4.914 C15.907,5.291 15.907,5.636 15.906,5.982 C15.904,7.372 14.824,8.462 13.451,8.462 C12.78,8.462 11.0,7.371 10.998,5.980 C10.997,5.623 10.998,5.265 10.998,4.909 C10.241,4.909 9.550,4.909 8.816,4.909 C8.816,5.279 8.816,5.624 8.816,5.970 C8.814,7.374 7.751,8.459 6.375,8.462 C4.983,8.464 3.909,7.370 3.907,5.947 C3.906,5.603 3.907,5.260 3.907,4.888 C3.504,4.888 3.156,4.874 2.811,4.891 C1.892,4.935 1.298,5.536 1.274,6.458 C1.257,7.108 1.270,7.760 1.270,8.411 C1.270,8.874 1.270,9.337 1.270,9.791 C11.790,9.791 22.247,9.791 32.722,9.791 C32.722,8.638 32.741,7.518 32.715,6.399 ZM25.762,27.271 C25.384,27.278 25.6,27.273 24.628,27.273 C24.250,27.273 23.872,27.279 23.494,27.271 C22.773,27.256 22.212,26.742 22.190,26.34 C22.165,25.233 22.166,24.431 22.189,23.630 C22.209,22.923 22.759,22.394 23.485,22.376 C24.256,22.356 25.28,22.355 25.799,22.377 C26.541,22.398 27.70,22.948 27.83,23.689 C27.96,24.445 27.95,25.201 27.83,25.957 C27.71,26.723 26.527,27.258 25.762,27.271 ZM25.763,23.722 C25.1,23.722 24.271,23.722 23.485,23.722 C23.485,24.400 23.474,25.49 23.497,25.697 C23.500,25.792 23.659,25.959 23.751,25.961 C24.411,25.984 25.73,25.974 25.763,25.974 C25.763,25.185 25.763,24.466 25.763,23.722 ZM25.762,20.14 C25.385,20.25 25.7,20.16 24.629,20.16 C24.629,20.13 24.629,20.11 24.629,20.9 C24.221,20.9 23.812,20.24 23.405,20.5 C22.732,19.974 22.209,19.461 22.189,18.784 C22.166,17.984 22.166,17.182 22.189,16.382 C22.209,15.664 22.756,15.150 23.531,15.122 C24.270,15.96 25.13,15.93 25.752,15.123 C26.585,15.158 27.79,15.700 27.85,16.530 C27.91,17.240 27.93,17.950 27.85,18.660 C27.76,19.467 26.567,19.988 25.762,20.14 ZM25.767,16.474 C25.12,16.474 24.282,16.474 23.518,16.474 C23.518,17.232 23.518,17.962 23.518,18.693 C24.282,18.693 25.24,18.693 25.767,18.693 C25.767,17.938 25.767,17.220 25.767,16.474 ZM17.746,27.272 C17.368,27.278 16.990,27.273 16.612,27.273 C16.234,27.273 15.856,27.280 15.478,27.271 C14.762,27.253 14.208,26.730 14.188,26.18 C14.167,25.232 14.169,24.445 14.187,23.659 C14.203,22.945 14.735,22.401 15.456,22.378 C16.242,22.353 17.29,22.353 17.815,22.378 C18.555,22.402 19.73,22.957 19.84,23.705 C19.95,24.445 19.94,25.186 19.85,25.927 C19.75,26.722 18.534,27.260 17.746,27.272 ZM17.769,23.715 C17.0,23.715 16.281,23.715 15.485,23.715 C15.485,24.391 15.476,25.52 15.496,25.713 C15.498,25.801 15.641,25.959 15.722,25.961 C16.396,25.981 17.70,25.973 17.769,25.973 C17.769,25.208 17.769,24.490 17.769,23.715 ZM17.791,20.11 C17.399,20.25 17.5,20.14 16.612,20.14 C16.612,20.12 16.612,20.11 16.612,20.11 C16.219,20.11 15.826,20.24 15.434,20.7 C14.734,19.978 14.207,19.464 14.188,18.767 C14.168,17.981 14.169,17.195 14.187,16.410 C14.204,15.684 14.731,15.157 15.503,15.125 C16.257,15.93 17.15,15.91 17.769,15.125 C18.599,15.162 19.81,15.708 19.86,16.547 C19.90,17.257 19.94,17.967 19.85,18.677 C19.75,19.461 18.568,19.983 17.791,20.11 ZM17.758,16.484 C16.992,16.484 16.262,16.484 15.509,16.484 C15.509,17.241 15.509,17.960 15.509,18.700 C16.293,18.700 17.25,18.700 17.758,18.700 C17.758,17.938 17.758,17.209 17.758,16.484 ZM9.769,27.271 C9.391,27.279 9.13,27.273 8.635,27.273 C8.257,27.273 7.878,27.279 7.500,27.271 C6.761,27.256 6.209,26.731 6.189,25.991 C6.169,25.220 6.170,24.448 6.188,23.678 C6.206,22.939 6.746,22.396 7.487,22.376 C8.258,22.356 9.30,22.355 9.801,22.377 C10.546,22.398 11.73,22.946 11.85,23.687 C11.96,24.442 11.95,25.198 11.85,25.954 C11.75,26.720 10.533,27.257 9.769,27.271 ZM9.767,23.717 C9.14,23.717 8.294,23.717 7.494,23.717 C7.494,24.391 7.484,25.25 7.504,25.658 C7.508,25.765 7.641,25.955 7.720,25.958 C8.395,25.982 9.71,25.972 9.767,25.972 C9.767,25.202 9.767,24.472 9.767,23.717 ZM9.762,20.14 C9.384,20.25 9.6,20.16 8.628,20.16 C8.628,20.14 8.628,20.13 8.628,20.11 C8.235,20.11 7.842,20.24 7.450,20.9 C6.745,19.980 6.215,19.480 6.192,18.779 C6.166,17.979 6.165,17.177 6.192,16.377 C6.215,15.674 6.746,15.160 7.495,15.126 C8.249,15.92 9.7,15.92 9.761,15.124 C10.596,15.159 11.82,15.700 11.87,16.535 C11.91,17.245 11.93,17.955 11.86,18.665 C11.79,19.470 10.570,19.988 9.762,20.14 ZM9.770,16.478 C9.10,16.478 8.280,16.478 7.522,16.478 C7.522,17.228 7.522,17.947 7.522,18.706 C8.288,18.706 9.21,18.706 9.770,18.706 C9.770,17.951 9.770,17.222 9.770,16.478 Z" />
                                                </svg>
                                                <div>
                                                    <div>Заезд:</div>
                                                    <div>{format(startDate, 'dd MMMM yyyy', { locale: ru })}</div>
                                                </div>
                                            </div>
                                            <div className="modal-date">
                                                <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="34px" height="34px">
                                                    <path fillRule="evenodd" fill="rgb(30, 28, 25)" d="M33.996,31.225 C33.996,32.748 32.748,33.997 31.226,33.997 C21.742,34.0 12.258,33.999 2.773,33.997 C1.230,33.997 0.1,32.746 0.1,31.186 C0.2,22.931 0.2,14.677 0.1,6.423 C0.1,4.862 1.185,3.627 2.748,3.566 C3.111,3.552 3.474,3.563 3.872,3.563 C3.908,2.986 3.880,2.449 3.986,1.941 C4.259,0.639 5.376,0.125 6.704,0.16 C7.884,0.143 8.804,1.213 8.814,2.473 C8.816,2.819 8.814,3.164 8.814,3.560 C9.195,3.560 9.538,3.560 9.882,3.560 C10.230,3.560 10.578,3.560 10.999,3.560 C10.999,3.205 10.998,2.864 11.0,2.523 C11.8,1.74 12.58,0.8 13.472,0.11 C14.852,0.13 15.895,1.89 15.904,2.518 C15.906,2.848 15.904,3.178 15.904,3.534 C16.633,3.534 17.324,3.534 18.90,3.534 C18.90,3.206 18.89,2.865 18.91,2.525 C18.99,1.75 19.147,0.8 20.561,0.11 C21.941,0.13 22.986,1.89 22.995,2.517 C22.997,2.847 22.995,3.177 22.995,3.533 C23.723,3.533 24.414,3.533 25.181,3.533 C25.181,3.206 25.179,2.866 25.181,2.526 C25.187,1.93 26.226,0.14 27.603,0.11 C29.19,0.7 30.74,1.70 30.85,2.516 C30.87,2.846 30.85,3.176 30.85,3.516 C30.658,3.558 31.203,3.554 31.731,3.648 C33.62,3.885 33.996,5.28 33.996,6.372 C33.998,14.657 33.998,22.941 33.996,31.225 ZM1.270,11.657 C1.270,18.61 1.270,24.465 1.271,30.870 C1.271,32.127 1.875,32.726 3.143,32.726 C12.381,32.727 21.620,32.727 30.859,32.726 C32.121,32.726 32.724,32.124 32.724,30.862 C32.725,24.473 32.724,18.84 32.724,11.694 C32.724,11.532 32.724,11.369 32.724,11.182 C22.233,11.182 11.788,11.182 1.270,11.182 C1.270,11.360 1.270,11.509 1.270,11.657 ZM7.346,1.874 C7.126,1.459 6.623,1.227 6.199,1.309 C5.681,1.410 5.290,1.759 5.258,2.271 C5.215,2.949 5.248,3.631 5.247,4.311 C5.247,4.598 5.246,4.886 5.248,5.174 C5.249,5.477 5.253,5.779 5.258,6.82 C5.265,6.521 5.488,6.823 5.871,7.12 C6.571,7.358 7.416,6.931 7.453,6.154 C7.513,4.915 7.506,3.673 7.508,2.432 C7.508,2.245 7.436,2.43 7.346,1.874 ZM14.599,2.502 C14.567,1.781 14.71,1.283 13.444,1.289 C12.813,1.295 12.314,1.794 12.306,2.517 C12.294,3.712 12.315,4.909 12.353,6.103 C12.373,6.727 12.829,7.111 13.460,7.109 C14.87,7.107 14.524,6.720 14.552,6.88 C14.580,5.498 14.558,4.907 14.558,4.317 C14.574,4.317 14.589,4.317 14.605,4.317 C14.605,3.712 14.627,3.106 14.599,2.502 ZM21.693,2.535 C21.665,1.791 21.162,1.273 20.523,1.289 C19.889,1.305 19.403,1.802 19.396,2.530 C19.384,3.709 19.405,4.890 19.440,6.70 C19.459,6.708 19.898,7.102 20.517,7.109 C21.172,7.116 21.615,6.730 21.645,6.75 C21.672,5.486 21.650,4.895 21.650,4.305 C21.666,4.305 21.682,4.305 21.697,4.305 C21.697,3.714 21.715,3.124 21.693,2.535 ZM28.770,2.469 C28.736,1.773 28.249,1.294 27.634,1.290 C27.24,1.285 26.497,1.769 26.487,2.459 C26.467,3.684 26.487,4.911 26.537,6.135 C26.562,6.777 27.43,7.133 27.715,7.107 C28.299,7.85 28.714,6.673 28.734,6.55 C28.754,5.480 28.739,4.904 28.739,4.329 C28.751,4.329 28.764,4.329 28.777,4.329 C28.777,3.709 28.801,3.87 28.770,2.469 ZM32.715,6.399 C32.698,5.655 32.186,5.15 31.530,4.930 C31.73,4.871 30.602,4.918 30.88,4.918 C30.88,5.302 30.90,5.677 30.88,6.52 C30.78,7.385 28.962,8.467 27.605,8.462 C26.277,8.457 25.184,7.369 25.179,6.45 C25.178,5.671 25.179,5.297 25.179,4.903 C24.435,4.903 23.745,4.903 22.997,4.903 C22.997,5.302 22.998,5.648 22.997,5.994 C22.994,7.247 22.71,8.303 20.847,8.456 C19.642,8.607 18.477,7.842 18.189,6.631 C18.59,6.85 18.87,5.501 18.41,4.914 C17.343,4.914 16.643,4.914 15.907,4.914 C15.907,5.291 15.907,5.636 15.906,5.982 C15.904,7.372 14.824,8.462 13.451,8.462 C12.78,8.462 11.0,7.371 10.998,5.980 C10.997,5.623 10.998,5.265 10.998,4.909 C10.241,4.909 9.550,4.909 8.816,4.909 C8.816,5.279 8.816,5.624 8.816,5.970 C8.814,7.374 7.751,8.459 6.375,8.462 C4.983,8.464 3.909,7.370 3.907,5.947 C3.906,5.603 3.907,5.260 3.907,4.888 C3.504,4.888 3.156,4.874 2.811,4.891 C1.892,4.935 1.298,5.536 1.274,6.458 C1.257,7.108 1.270,7.760 1.270,8.411 C1.270,8.874 1.270,9.337 1.270,9.791 C11.790,9.791 22.247,9.791 32.722,9.791 C32.722,8.638 32.741,7.518 32.715,6.399 ZM25.762,27.271 C25.384,27.278 25.6,27.273 24.628,27.273 C24.250,27.273 23.872,27.279 23.494,27.271 C22.773,27.256 22.212,26.742 22.190,26.34 C22.165,25.233 22.166,24.431 22.189,23.630 C22.209,22.923 22.759,22.394 23.485,22.376 C24.256,22.356 25.28,22.355 25.799,22.377 C26.541,22.398 27.70,22.948 27.83,23.689 C27.96,24.445 27.95,25.201 27.83,25.957 C27.71,26.723 26.527,27.258 25.762,27.271 ZM25.763,23.722 C25.1,23.722 24.271,23.722 23.485,23.722 C23.485,24.400 23.474,25.49 23.497,25.697 C23.500,25.792 23.659,25.959 23.751,25.961 C24.411,25.984 25.73,25.974 25.763,25.974 C25.763,25.185 25.763,24.466 25.763,23.722 ZM25.762,20.14 C25.385,20.25 25.7,20.16 24.629,20.16 C24.629,20.13 24.629,20.11 24.629,20.9 C24.221,20.9 23.812,20.24 23.405,20.5 C22.732,19.974 22.209,19.461 22.189,18.784 C22.166,17.984 22.166,17.182 22.189,16.382 C22.209,15.664 22.756,15.150 23.531,15.122 C24.270,15.96 25.13,15.93 25.752,15.123 C26.585,15.158 27.79,15.700 27.85,16.530 C27.91,17.240 27.93,17.950 27.85,18.660 C27.76,19.467 26.567,19.988 25.762,20.14 ZM25.767,16.474 C25.12,16.474 24.282,16.474 23.518,16.474 C23.518,17.232 23.518,17.962 23.518,18.693 C24.282,18.693 25.24,18.693 25.767,18.693 C25.767,17.938 25.767,17.220 25.767,16.474 ZM17.746,27.272 C17.368,27.278 16.990,27.273 16.612,27.273 C16.234,27.273 15.856,27.280 15.478,27.271 C14.762,27.253 14.208,26.730 14.188,26.18 C14.167,25.232 14.169,24.445 14.187,23.659 C14.203,22.945 14.735,22.401 15.456,22.378 C16.242,22.353 17.29,22.353 17.815,22.378 C18.555,22.402 19.73,22.957 19.84,23.705 C19.95,24.445 19.94,25.186 19.85,25.927 C19.75,26.722 18.534,27.260 17.746,27.272 ZM17.769,23.715 C17.0,23.715 16.281,23.715 15.485,23.715 C15.485,24.391 15.476,25.52 15.496,25.713 C15.498,25.801 15.641,25.959 15.722,25.961 C16.396,25.981 17.70,25.973 17.769,25.973 C17.769,25.208 17.769,24.490 17.769,23.715 ZM17.791,20.11 C17.399,20.25 17.5,20.14 16.612,20.14 C16.612,20.12 16.612,20.11 16.612,20.11 C16.219,20.11 15.826,20.24 15.434,20.7 C14.734,19.978 14.207,19.464 14.188,18.767 C14.168,17.981 14.169,17.195 14.187,16.410 C14.204,15.684 14.731,15.157 15.503,15.125 C16.257,15.93 17.15,15.91 17.769,15.125 C18.599,15.162 19.81,15.708 19.86,16.547 C19.90,17.257 19.94,17.967 19.85,18.677 C19.75,19.461 18.568,19.983 17.791,20.11 ZM17.758,16.484 C16.992,16.484 16.262,16.484 15.509,16.484 C15.509,17.241 15.509,17.960 15.509,18.700 C16.293,18.700 17.25,18.700 17.758,18.700 C17.758,17.938 17.758,17.209 17.758,16.484 ZM9.769,27.271 C9.391,27.279 9.13,27.273 8.635,27.273 C8.257,27.273 7.878,27.279 7.500,27.271 C6.761,27.256 6.209,26.731 6.189,25.991 C6.169,25.220 6.170,24.448 6.188,23.678 C6.206,22.939 6.746,22.396 7.487,22.376 C8.258,22.356 9.30,22.355 9.801,22.377 C10.546,22.398 11.73,22.946 11.85,23.687 C11.96,24.442 11.95,25.198 11.85,25.954 C11.75,26.720 10.533,27.257 9.769,27.271 ZM9.767,23.717 C9.14,23.717 8.294,23.717 7.494,23.717 C7.494,24.391 7.484,25.25 7.504,25.658 C7.508,25.765 7.641,25.955 7.720,25.958 C8.395,25.982 9.71,25.972 9.767,25.972 C9.767,25.202 9.767,24.472 9.767,23.717 ZM9.762,20.14 C9.384,20.25 9.6,20.16 8.628,20.16 C8.628,20.14 8.628,20.13 8.628,20.11 C8.235,20.11 7.842,20.24 7.450,20.9 C6.745,19.980 6.215,19.480 6.192,18.779 C6.166,17.979 6.165,17.177 6.192,16.377 C6.215,15.674 6.746,15.160 7.495,15.126 C8.249,15.92 9.7,15.92 9.761,15.124 C10.596,15.159 11.82,15.700 11.87,16.535 C11.91,17.245 11.93,17.955 11.86,18.665 C11.79,19.470 10.570,19.988 9.762,20.14 ZM9.770,16.478 C9.10,16.478 8.280,16.478 7.522,16.478 C7.522,17.228 7.522,17.947 7.522,18.706 C8.288,18.706 9.21,18.706 9.770,18.706 C9.770,17.951 9.770,17.222 9.770,16.478 Z" />
                                                </svg>
                                                <div>
                                                    <div>Выезд:</div>
                                                    <div>{format(endDate, 'dd MMMM yyyy', { locale: ru })}</div>
                                                </div>
                                            </div>
                                            <div className="modal-nights">
                                                {differenceInCalendarDays(endDate, startDate) > 0 &&
                                                    <>{differenceInCalendarDays(endDate, startDate)} {num_word(differenceInCalendarDays(endDate, startDate), ['ночь', 'ночи', 'ночей'])}</>
                                                }
                                            </div>
                                            <div className="row">
                                                <div className="col-6"><span className="blackcircle" /> - Дата заезда</div>
                                                <div className="col-6"><span className="redcircle" /> - Дата выезда</div>
                                                <div className="col-12 mt-2 d-flex align-items-center"><span className="nonecircle" /> - Нет свободных домов</div>
                                            </div>
                                        </div>
                                    </div>
                                    {false &&
                                        <div className="modal-alert">
                                            <svg xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" width="17.5px" height="61.5px">
                                                <path fillRule="evenodd" stroke="rgb(241, 51, 51)" strokeWidth="1px" strokeLinecap="butt" strokeLinejoin="miter" fill="none" d="M1.26,0.499 L1.26,22.133 L2.262,42.665 L14.806,42.665 L16.42,21.964 L16.42,0.499 L1.26,0.499 ZM0.496,53.695 C0.496,55.618 1.260,57.231 2.792,58.531 C4.323,59.832 6.207,60.482 8.446,60.482 C10.683,60.482 12.582,59.832 14.143,58.531 C15.703,57.231 16.484,55.618 16.484,53.695 C16.484,51.772 15.703,50.160 14.143,48.859 C12.582,47.558 10.683,46.907 8.446,46.907 C6.207,46.907 4.323,47.558 2.792,48.859 C1.260,50.160 0.496,51.772 0.496,53.695 Z" />
                                            </svg>
                                            <span>
                                                Приносим извинения, но в выбранный промежуток,
                                                есть день/дни, в котором нет свободных домов, пожалуйста,
                                                скоректируйте даты пребывания!
                                            </span>
                                        </div>
                                    }
                                    <div className="modal-btn" data-bs-dismiss="modal" aria-label="Close">применить</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div className="modal fade" id="Modal3" tabIndex={-1} aria-labelledby="Modal3Label" aria-hidden="true">
                        <div className="modal-dialog modal-lg">
                            <div className="modal-content">
                                <div className="modal-header">
                                    <h5 className="modal-title" id="Modal3Label">Гости:</h5>
                                    <button type="button" className="btn-close" data-bs-dismiss="modal" aria-label="Close" />
                                </div>
                                <div className="modal-body">
                                    <div className="modal-input_wrap">
                                        <div className="modal-input">
                                            <div className="modal-input_label">Взрослых</div>
                                            <div className="modal-input_line">
                                                <div onClick={() => setAdults(prev => prev > 0 ? prev - 1 : prev)}>-</div>
                                                <div>{adults}</div>
                                                <div onClick={() => setAdults(prev => prev + 1)}>+</div>
                                            </div>
                                        </div>
                                        <div className="modal-input">
                                            <div className="modal-input_label">Детей</div>
                                            <div className="modal-input_line">
                                                <div onClick={() => setСhildren(prev => prev > 0 ? prev - 1 : prev)}>-</div>
                                                <div>{children}</div>
                                                <div onClick={() => setСhildren(prev => prev + 1)}>+</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div className="modal-alert text-center">
                                        <span style={{ fontSize: "17px" }}>
                                            Учтите, в одном доме может проживать не больше 3 взрослых и 0 детей, или 2 взрослых и 2
                                            детей. Если вы укажите большее количество гостей, Вам прийдется забронировать сразу
                                            несколько домов!
                                        </span>
                                    </div>
                                    <div className="modal-btn" data-bs-dismiss="modal" aria-label="Close">применить</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            <Banner show={open} to={ref} />
        </>
    )
}
const SearchResult = ({ region }) => {
    const media = window.matchMedia('(max-width: 700px)')
    const [tab, setTab] = useState(1)
    const searchResult = useRef(null)

    useEffect(() => {
        setTimeout(() => searchResult.current.scrollIntoView(true), 1000)
    }, [])


    return (
        <div className="search-result">
            <div ref={searchResult} className="reg">
                {region.title} {media && media.matches ? '' : '|'} <span>Таруса</span>
                {/* <sup>1 отель</sup> */}
            </div>
            <div className="mobil-switch">
                <button className={tab === 0 && 'active'} onClick={() => setTab(0)}>Регион</button>
                <button className={tab === 1 && 'active'} onClick={() => setTab(1)}>Отели</button>
            </div>
            <div className="row">
                <div className="col" style={media && media.matches && tab === 1 ? { display: 'none' } : {}}>
                    <Map />
                </div>
                <div className="col" style={media && media.matches && tab === 0 ? { display: 'none' } : {}}>
                    <div className="search-item">
                        <div className="search-item_header">
                            <div className="search-item_title"><strong>POINT<span>.</span></strong>Услимово</div>
                            {/* <button className="search-item_btn">
                        <img src="/assets/images/more.png" alt="" />
                    </button> */}
                        </div>
                        <div className="row">
                            <div className="col-12 col-lg-6">
                                <div className="search-item_info">
                                    <img src="/assets/images/loc.svg" alt="" />
                                    <div>Калужская область, Тарусский район, ДНП «Услимово»
                                        <br /><a href="https://yandex.ru/maps/-/CCUR6GUS-A" target={'_blank'} rel="noreferrer">Как добраться?</a>
                                    </div>
                                </div>
                            </div>
                            <div className="col-12 col-lg-6">
                                <div className="search-item_info">
                                    <img src="/assets/images/home.svg" alt="" />
                                    <div>Свободных домов: <br /><strong>4/17</strong></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <Slider />

                </div>
            </div>
        </div>
    )
}


const Slider = () => {

    const [index, setIndex] = useState(0)

    const slides = [
        {
            img: "/assets/images/slide.png"
        },
        {
            img: "/assets/images/slide.png"
        },
        {
            img: "/assets/images/slide.png"
        }

    ]
    const [open, setOpen] = useState(false)
    const panorama = () => {
        setOpen(!open)
    }

    return (
        <div className="slider">
            <Splide
                hasTrack={false}
                options={{
                    speed: 100,
                    pagination: false,
                    padding: { left: 0, right: '30%' },
                    breakpoints: {
                        720: {
                            padding: 0
                        }
                    }
                }}
                onMoved={(_e, i) => setIndex(i)}
                className="slider"
            >
                <SplideTrack>
                    {slides.map(item => (
                        <SplideSlide>
                            <img src={item.img} alt="" />
                        </SplideSlide>
                    ))}
                </SplideTrack>
                <div className="slider_nav">
                    <div><span>0{index + 1}</span>/0{slides.length}</div>
                    <div className="slider_arrows splide__arrows">
                        <button className="splide__arrow splide__arrow--prev">←</button>
                        <button className="splide__arrow splide__arrow--next">→</button>
                    </div>
                </div>
            </Splide>
            <div className="slider_caption-wrap">
                <div className="slider_caption" onClick={panorama}>
                    <img src="/assets/images/360-view.svg" alt="" />
                    3d - панорама
                </div>
            </div>
            {open &&
                <><div className="panorama_close" onClick={panorama}>X</div><iframe className="panorama" frameborder="0" allowfullscreen allow="xr-spatial-tracking; gyroscope; accelerometer" scrolling="no" src={"https://kuula.co/share/collection/797m6?logo=1&info=1&fs=1&vr=0&sd=1&thumbs=1"}></iframe></>}
        </div>
    )
}

const SelectRegion = ({ set }) => {
    const [selected, setSelected] = useState()
    return (
        <div className="modal fade" id="Modal1" tabIndex={-1} aria-labelledby="Modal1Label" aria-hidden="true">
            <div className="modal-dialog modal-lg">
                <div className="modal-content">
                    <div className="modal-header">
                        <h5 className="modal-title" id="Modal1Label">Выбор региона:</h5>
                        <button type="button" className="btn-close" data-bs-dismiss="modal" aria-label="Close" />
                    </div>
                    <div className="modal-body">
                        <div className="row">
                            {regions.map(r => (
                                <div
                                    onClick={() => setSelected(r)}
                                    className={`col-12 col-md-6`}
                                    key={r.id}
                                >
                                    <div className={`modal-region ${selected && r.id === selected.id ? 'active' : ''}`}>
                                        {r.title}
                                        <span>{r.count} отель</span>
                                    </div>
                                </div>
                            ))}
                        </div>
                        <div className="modal-alert">
                            Скоро новые области и открытие новых отелей!
                        </div>
                        <div className="modal-btn" data-bs-dismiss="modal" aria-label="Close" onClick={() => set(selected)}>применить</div>
                    </div>
                </div>
            </div>
        </div>
    )
}

export default Welcome